{"version":3,"sources":["hooks/useFetch.js","components/Loading.js","components/Phrase.js","BreakingBadPhrases.js","index.js"],"names":["useFetch","url","includes","Error","isMountedRef","useRef","useState","data","loading","error","state","setState","useEffect","current","fetch","then","res","json","catch","err","StyledContainer","styled","div","Loading","className","Phrase","phrase","length","quote","author","StyledButton","button","BreakingBadPhrases","numberPhrase","setNumberPhrase","onClick","ReactDOM","render","document","getElementById"],"mappings":"8NA4BeA,EA1BE,SAAEC,GACf,IAAKA,IAAQA,EAAIC,SAAU,YAAe,MAAM,IAAIC,MAAO,wBAE3D,IAAMC,EAAeC,kBAAQ,GAHL,EAIIC,mBAAU,CAAEC,KAAM,GAAIC,SAAS,EAAMC,MAAO,OAJhD,mBAIhBC,EAJgB,KAITC,EAJS,KAuBxB,OAjBAC,qBAAW,WACP,OAAO,WACHR,EAAaS,SAAU,KAE5B,IAEHD,qBAAW,WACPE,MAAOb,GACFc,MAAM,SAAAC,GAAG,OAAIA,EAAIC,UACjBF,MAAM,SAAAR,GACHH,EAAaS,SAAWF,EAAU,CAAEJ,KAAMA,EAAMC,SAAS,EAAOC,MAAO,UAE1ES,OAAO,SAAAC,GACJR,EAAU,CAAEJ,KAAM,GAAIC,SAAS,EAAOC,MAAM,yBAAD,OAA4BU,UAEhF,CAAElB,IAEES,G,2iCCtBX,IAAMU,EAAkBC,IAAOC,IAAV,KAuDNC,EAVC,WACZ,OACI,eAACH,EAAD,WACI,qBAAKI,UAAU,YACf,qBAAKA,UAAU,YACf,qBAAKA,UAAU,gB,wuBCjD3B,IAAMJ,EAAkBC,IAAOC,IAAV,KA8CNG,EAfA,SAAC,GAAkB,IAAfC,EAAc,EAAdA,OAAc,EACHA,EAAOC,OAAS,GAAKD,EAAQ,GAA/CE,EADqB,EACrBA,MAAOC,EADc,EACdA,OAEf,OACI,eAAC,EAAD,WACI,6BAAMD,IACN,mCAAOC,S,itBCnCnB,IAAMT,EAAkBC,IAAOC,IAAV,KAOfQ,EAAeT,IAAOU,OAAV,KA2CHC,EA3BY,WAAO,IAAD,EACa1B,mBAAU,GADvB,mBACrB2B,EADqB,KACPC,EADO,OAEYlC,EAAS,yCAAD,OAA4CiC,IAA/EP,EAFe,EAErBnB,KAAcC,EAFO,EAEPA,QAASC,EAFF,EAEEA,MAE3BwB,EAAe,IAAKC,EAAiB,GAMzC,OACI,eAAC,EAAD,WAEU1B,GAAWC,EAEb,cAAC,EAAD,IAEA,cAAC,EAAD,CAAQiB,OAASA,IAGrB,cAACI,EAAD,CAAcK,QAdF,WAChBD,EAAiBD,EAAe,IAa5B,4BC5CZG,IAASC,OAAQ,cAAC,EAAD,IAAwBC,SAASC,eAAgB,W","file":"static/js/main.c02f6962.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\n\r\nconst useFetch = ( url ) => {\r\n    if( !url || !url.includes( 'https://' ) ) throw new Error( 'Debe ingresar un URL' );\r\n\r\n    const isMountedRef = useRef( true );\r\n    const [ state, setState ] = useState( { data: [], loading: true, error: null } );\r\n\r\n    useEffect( () => {\r\n        return () => {\r\n            isMountedRef.current = false;\r\n        }\r\n    }, [] )\r\n\r\n    useEffect( () => {\r\n        fetch( url )\r\n            .then( res => res.json() )\r\n            .then( data => {\r\n                isMountedRef.current && setState( { data: data, loading: false, error: null } ); \r\n            } )\r\n            .catch( err => {\r\n                setState( { data: [], loading: false, error: `Error en la peticion. ${ err }` } );\r\n            } )\r\n    }, [ url ] );\r\n\r\n    return state;\r\n};\r\n\r\nexport default useFetch;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst StyledContainer = styled.div`\r\n    height: 70px;\r\n    width: 70px;\r\n    text-align: center;\r\n\r\n    > div {\r\n        -webkit-animation: sk-bouncedelay 1.4s infinite ease-in-out both;\r\n        animation: sk-bouncedelay 1.4s infinite ease-in-out both;  \r\n        background-color: #0f574e;\r\n        border-radius: 100%;\r\n        display: inline-block;\r\n        height: 18px;\r\n        width: 18px;\r\n    }\r\n\r\n    .bounce1 {\r\n        -webkit-animation-delay: -0.32s;\r\n        animation-delay: -0.32s;\r\n    }\r\n\r\n    .bounce2 {\r\n        -webkit-animation-delay: -0.16s;\r\n        animation-delay: -0.16s;\r\n    }\r\n\r\n    @-webkit-keyframes sk-bouncedelay {\r\n    0%, 80%, 100% {\r\n        -webkit-transform: scale(0)\r\n    }\r\n    40% {\r\n        -webkit-transform: scale(1.0)\r\n    }\r\n}\r\n  \r\n    @keyframes sk-bouncedelay {\r\n        0%, 80%, 100% { \r\n            -webkit-transform: scale(0);\r\n            transform: scale(0);\r\n        } 40% { \r\n            -webkit-transform: scale(1.0);\r\n            transform: scale(1.0);\r\n        }\r\n    }\r\n`;\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <StyledContainer>\r\n            <div className=\"bounce1\"></div>\r\n            <div className=\"bounce2\"></div>\r\n            <div className=\"bounce3\"></div>\r\n        </StyledContainer>\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from '@emotion/styled';\r\n\r\nconst StyledContainer = styled.div`\r\n    background-color: rgba(15, 87, 78, 0.2);   \r\n    max-width: 80%;\r\n    padding: 3rem;\r\n\r\n    h1 {\r\n        font-family: Arial, Helvetica, sans-serif;\r\n        padding-left: 2.5rem;\r\n        position: relative;\r\n        text-align: justify;\r\n        word-wrap: break-word;\r\n\r\n        &::before {\r\n            color: #000;\r\n            content: open-quote;\r\n            font-size: 7rem;\r\n            left: -1rem;\r\n            position: absolute;\r\n            top: -2rem;\r\n        }\r\n    }\r\n\r\n    p {\r\n        color: #fff;\r\n        font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n        font-size: 1.4rem;\r\n        margin-top: 2rem;\r\n        text-align: right;\r\n    }\r\n`;\r\n\r\nconst Phrase = ( { phrase } ) => {\r\n    const { quote, author } = phrase.length > 0 && phrase[ 0 ];\r\n\r\n    return (\r\n        <StyledContainer>\r\n            <h1>{ quote }</h1>\r\n            <p>- { author }</p>\r\n        </StyledContainer>\r\n    );\r\n};\r\n\r\nPhrase.propTypes = {\r\n    phrase: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Phrase;\r\n","import React, { useState } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport useFetch from './hooks/useFetch';\r\nimport Loading from './components/Loading';\r\nimport Phrase from './components/Phrase';\r\n\r\nconst StyledContainer = styled.div`\r\n    align-items: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 22rem;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n    background: -webkit-linear-gradient( top left, #007d35 0%, #007d35 40%, #0f574e 100% );\r\n    background-size: 300px;\r\n    border: 1px solid #000;\r\n    color: #fff;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    font-size: 1.5rem;\r\n    margin-top: 2.5rem;\r\n    padding: 1rem 3rem;\r\n\r\n    &:hover {\r\n        background: -webkit-linear-gradient( top left, rgba(0, 128, 53, 0.5) 0%, rgba(0, 128, 53, 0.5) 40%, rgba(15, 87, 78, 0.5) 100% );\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst BreakingBadPhrases = () => {\r\n    const [ numberPhrase, setNumberPhrase ] = useState( 1 );\r\n    const { data: phrase, loading, error } = useFetch( `https://breakingbadapi.com/api/quotes/${ numberPhrase }` );\r\n\r\n    if( numberPhrase > 30 ) setNumberPhrase( 1 );\r\n\r\n    const handleClick = () => {\r\n        setNumberPhrase( numberPhrase + 1 );\r\n    };\r\n\r\n    return (\r\n        <StyledContainer>\r\n            {\r\n                ( loading || error )\r\n                    ?\r\n                <Loading />\r\n                    :\r\n                <Phrase phrase={ phrase } />\r\n            }\r\n\r\n            <StyledButton onClick={ handleClick }>\r\n                Get Phrase\r\n            </StyledButton>\r\n        </StyledContainer>\r\n    );\r\n};\r\n\r\nexport default BreakingBadPhrases;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport BreakingBadPhrases from './BreakingBadPhrases';\r\n\r\nReactDOM.render( <BreakingBadPhrases />, document.getElementById( 'root' ) );\r\n"],"sourceRoot":""}